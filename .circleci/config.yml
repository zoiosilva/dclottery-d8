defaults: &defaults
  docker:
    - image: quay.io/taoticreative/build-tools-ci-docker:prepare-for-pantheon
  working_directory: ~/example_drops_8_composer
  environment:
    #=========================================================================
    # In addition to the environment variables defined in this file, also
    # add the following variables in the Circle CI UI.
    #
    # See: https://circleci.com/docs/2.0/env-vars/
    #
    # TERMINUS_SITE:  Name of the Pantheon site to run tests on, e.g. my_site
    # TERMINUS_TOKEN: The Pantheon machine token
    # GITHUB_TOKEN:   The GitHub personal access token
    # GIT_EMAIL:      The email address to use when making commits
    #
    # TEST_SITE_NAME: The name of the test site to provide when installing.
    # ADMIN_PASSWORD: The admin password to use when installing.
    # ADMIN_EMAIL:    The email address to give the admin when installing.
    #=========================================================================
    TZ: "/usr/share/zoneinfo/America/Los_Angeles"

    # The variables below usually do not need to be modified.

    #======================================================================================================================================
    # Circle CI 2.0 does not yet expand environment variables so they have to be manually EXPORTed
    # Once environment variables can be expanded the variables below can be uncommented and the EXPORTs in set-up-globals.sh can be removed
    # See: https://discuss.circleci.com/t/unclear-how-to-work-with-user-variables-circleci-provided-env-variables/12810/11
    # See: https://discuss.circleci.com/t/environment-variable-expansion-in-working-directory/11322
    # See: https://discuss.circleci.com/t/circle-2-0-global-environment-variables/8681
    #======================================================================================================================================

    NOTIFY: 'scripts/github/add-commit-comment {project} {sha} "Created multidev environment [{site}#{env}]({dashboard-url})." {site-url}'
    ADMIN_USERNAME: admin
    TERM: dumb

version: 2
jobs:
  unit:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            - composer_cache-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}
            - composer_cache-{{ checksum "composer.json" }}
            - composer_cache

      - run:
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      - run:
          name: run composer install to get the vendor directory
          command: composer install

      - save_cache:
          key: composer_cache-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}
          paths:
            - /home/tester/.composer/cache

      - run:
          name: lint php code for syntax errors
          command: composer -n lint

      - restore_cache:
          keys:
            - theme_cache-{{ checksum "web/themes/dclottery/package.json" }}-{{ checksum "web/themes/dclottery/package-lock.json" }}
            - theme_cache-{{ checksum "web/themes/dclottery/package.json" }}
            - theme_cache
      - run:
          name: check coding standards
          command: composer -n code-sniff

      - run:
          name: Drupal deprecation testing
          command: composer d9-check

  functional:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
            - composer_cache-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}
            - composer_cache-{{ checksum "composer.json" }}
            - composer_cache

      - restore_cache:
          keys:
            - theme_cache-{{ checksum "web/themes/dclottery/package.json" }}-{{ checksum "web/themes/dclottery/package-lock.json" }}
            - theme_cache-{{ checksum "web/themes/dclottery/package.json" }}
            - theme_cache

      - run:
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      - run:
          name: log in
          command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

      - run:
          name: install dev dependencies, build assets, etc.
          command: ./.ci/scripts/01-prepare

      - run:
          name: build assets
          command: composer -n build-assets

      - run:
          name: prepare database for site-under test
          command: ./.ci/scripts/02-init-site-under-test-clone-existing

      - save_cache:
          key: theme_cache-{{ checksum "web/themes/dclottery/package.json" }}-{{ checksum "web/themes/dclottery/package-lock.json" }}
          paths:
            - web/themes/dclottery/node_modules
            - web/themes/dclottery/css

      - run:
          name: post-test actions
          command: ./.ci/scripts/04-post-test

      - run:
          name: handle merge to master (if needed)
          command: ./.ci/scripts/05-merge-master

      - run:
          name: remove transient test fixtures
          command: ./.ci/scripts/09-cleanup-fixtures

workflows:
  version: 2
  build_and_test:
    jobs:
      # Install dev dependencies and do simple tests (sniff, unit tests, etc.)
      - unit
      # Build deploy and test on target platform
      - functional
